group = 'com.mapzen'
version = '1.0.0-DEVELOPMENT'

description = """Mapzen"""

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
        classpath 'com.github.nrudenko:gradle-android-cq-plugin:0.1+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
        classpath 'org.oscim:vtm:0.1-SNAPSHOT'
    }
}

apply plugin: 'android'
apply plugin: 'crashlytics'
apply plugin: 'android-test'
apply plugin: 'android-cq'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://download.crashlytics.com/maven' }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

checkstyle {
    ignoreFailures false
    showViolations true
}

pmd {
    ignoreFailures false
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 18
    }
    // tell Android studio that the instrumentTest source set is located in the unit test source set
    sourceSets {
        instrumentTest.setRoot('src/test')
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
    }
}

sourceSets {
    testLocal {
        java.srcDir file('src/test/java')
        resources.srcDir file('src/test/resources')
    }
}

dependencies {
    compile 'com.android.support:support-v4:+'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'org.oscim:vtm:0.1-SNAPSHOT'
    compile 'com.google.android.gms:play-services:4.0.30'
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':vtm-android')
    compile project(':geojson')
    compile project(':volley')

    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.3-SNAPSHOT'
    testCompile 'com.squareup:fest-android:1.0.+'
    testCompile 'org.apache.commons:commons-io:1.3.2'
    testLocalCompile 'junit:junit:4.10'
    testLocalCompile 'org.robolectric:robolectric:2.3-SNAPSHOT'
    testLocalCompile 'com.squareup:fest-android:1.0.+'
    testLocalCompile 'org.apache.commons:commons-io:1.3.2'
    instrumentTestCompile 'junit:junit:4.10'
    instrumentTestCompile 'org.robolectric:robolectric:2.3-SNAPSHOT'
    instrumentTestCompile 'com.squareup:fest-android:1.0.+'
    instrumentTestCompile 'org.apache.commons:commons-io:1.3.2'
}

task updateManifestToSnapshot {
    isJenkins = "$System.env.JENKINS"
    buildNr = "$System.env.BUILD_NUMBER"
    if(isJenkins == "true") {
        println "jenkins env flipping to SNAPSHOT"
        File manifest = new File(projectDir.toString() + '/src/main/AndroidManifest.xml')
        String contents = manifest.getText( 'UTF-8' )
        String version = '-SNAPSHOT-' + buildNr
        println 'building: ' + version
        String updatedManifestContent = contents.replaceAll('-DEVELOPMENT', version)
        manifest.write(updatedManifestContent, 'UTF-8')
    } else {
        println "regular developer build"
    }
}
